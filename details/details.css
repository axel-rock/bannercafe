main {
	--size: 5em;
	display: grid;
	gap: calc(var(--gap) * 0.25);
	place-items: center;
	grid-template-columns: repeat(6, 1fr);
	grid-template-rows: min-content minmax(max-content, 50vh);
	grid-template-areas:
		'name name name name name name'
		'preview preview preview preview preview preview'
		'prev prev prev next next next'
		'type updated size views likes newtab';
}

main > * {
	width: inherit;
}

.square {
	/* aspect-ratio: 1; */
	height: var(--size);
	width: inherit;
	background-color: var(--background-color-1);
	display: grid;
	place-content: center;
}

#name {
	grid-area: name;
	overflow-wrap: break-word;
}

main {
	container: main size;
}

#preview {
	grid-area: preview;
	container: preview size;
	flex-basis: 100%;
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	place-self: center;
	width: min-content;
}

#prev,
#next {
	display: grid;
	place-content: center;
	flex-basis: 50%;
	height: var(--size);
}

#next:hover,
#prev:hover {
	background: var(--background-color-1);
}

#prev {
	grid-area: prev;
}

#next {
	grid-area: next;
}

#type {
	grid-area: type;
}

#type svg {
	width: 2em;
}

#updated {
	grid-area: updated;
}

#size {
	grid-area: size;
}

#views {
	grid-area: views;
}

#likes {
	grid-area: likes;
}

#newtab {
	grid-area: newtab;
}

section {
	grid-column: 1 / -1;
	display: grid;
	justify-content: start;
}

/* Alternate layout */

main:has(#preview .tall) {
	padding-top: 2em;
	grid-template-columns: var(--size) auto repeat(2, 1fr) var(--size);
	grid-template-rows: auto auto;
	grid-template-areas:
		'. preview name name name'
		'prev preview size views next'
		'prev preview likes updated next'
		'prev preview type newtab next'
		'prev preview . . next'
		'prev preview . . next';
}

main:has(#preview .tall) #preview {
	margin-right: 2em;
}

main:has(#preview .tall) :where(#prev, #next) {
	height: 100%;
}

/* Show dimensions */

#width,
#height {
	position: absolute;
	border-width: 0;
	border-style: solid;
	border-color: var(--color-1);
}

#width {
	bottom: calc(100% + 0.05em);
}

#height {
	left: calc(100% - 0.5em);
	rotate: 0.25turn;
	/* transform: rotate(-1turn); */
}
